"""init

Revision ID: 2dff5593abac
Revises: 
Create Date: 2025-03-24 12:56:10.061828

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2dff5593abac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kalendorius',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('aprasas', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('data')
    )
    op.create_table('studiju_programos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pavadinimas', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grupes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pavadinimas', sa.String(length=50), nullable=False),
    sa.Column('studiju_programa_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['studiju_programa_id'], ['studiju_programos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('vartotojai',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vardas', sa.String(length=50), nullable=False),
    sa.Column('pavarde', sa.String(length=50), nullable=False),
    sa.Column('el_pastas', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('vaidmuo', sa.String(length=50), nullable=False),
    sa.Column('studiju_programa_id', sa.Integer(), nullable=True),
    sa.Column('grupe_id', sa.Integer(), nullable=True),
    sa.Column('profilio_pav', sa.String(length=50), nullable=True),
    sa.Column('ikelimo_data', sa.DateTime(), nullable=True),
    sa.Column('el_pat', sa.Boolean(), nullable=False),
    sa.Column('el_pat_data', sa.DateTime(), nullable=True),
    sa.Column('dest_pat', sa.Boolean(), nullable=True),
    sa.Column('dest_pat_data', sa.DateTime(), nullable=True),
    sa.Column('aktyvumas', sa.Boolean(), nullable=True),
    sa.Column('nesekmingi_bandymai', sa.Integer(), nullable=True),
    sa.Column('blokavimo_laikas', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['grupe_id'], ['grupes.id'], ),
    sa.ForeignKeyConstraint(['studiju_programa_id'], ['studiju_programos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('moduliai',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pavadinimas', sa.String(length=50), nullable=False),
    sa.Column('aprasymas', sa.String(length=50), nullable=False),
    sa.Column('kreditai', sa.Integer(), nullable=False),
    sa.Column('semestro_informacija', sa.String(length=50), nullable=False),
    sa.Column('egzaminas_data', sa.DateTime(timezone=50), nullable=False),
    sa.Column('studiju_programa_id', sa.Integer(), nullable=True),
    sa.Column('destytojas_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destytojas_id'], ['vartotojai.id'], ),
    sa.ForeignKeyConstraint(['studiju_programa_id'], ['studiju_programos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('atsiskaitymai',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pavadinimas', sa.String(length=80), nullable=True),
    sa.Column('data_nuo', sa.DateTime(), nullable=False),
    sa.Column('data_iki', sa.DateTime(), nullable=False),
    sa.Column('aprasymas', sa.String(length=50), nullable=False),
    sa.Column('modulis_id', sa.Integer(), nullable=True),
    sa.Column('data', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['modulis_id'], ['moduliai.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('paskaitos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pavadinimas', sa.String(length=50), nullable=False),
    sa.Column('savaites_diena', sa.Integer(), nullable=False),
    sa.Column('laikas_nuo', sa.Time(), nullable=False),
    sa.Column('laikas_iki', sa.Time(), nullable=False),
    sa.Column('tipas', sa.String(length=50), nullable=False),
    sa.Column('modulis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['modulis_id'], ['moduliai.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('studentai_moduliai',
    sa.Column('studentas_id', sa.Integer(), nullable=False),
    sa.Column('modulis_id', sa.Integer(), nullable=False),
    sa.Column('atsiskaitymas_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['atsiskaitymas_id'], ['atsiskaitymai.id'], ),
    sa.ForeignKeyConstraint(['modulis_id'], ['moduliai.id'], ),
    sa.ForeignKeyConstraint(['studentas_id'], ['vartotojai.id'], ),
    sa.PrimaryKeyConstraint('studentas_id', 'modulis_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('studentai_moduliai')
    op.drop_table('paskaitos')
    op.drop_table('atsiskaitymai')
    op.drop_table('moduliai')
    op.drop_table('vartotojai')
    op.drop_table('grupes')
    op.drop_table('studiju_programos')
    op.drop_table('kalendorius')
    # ### end Alembic commands ###
